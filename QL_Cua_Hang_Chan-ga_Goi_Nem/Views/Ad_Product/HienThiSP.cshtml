@model PagedList.IPagedList<QL_Cua_Hang_Chan_ga_Goi_Nem.Models.san_pham>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Hiển Thị Sản Phẩm";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}

<div class="container-fluid product-admin-container">
    <div class="admin-header d-flex flex-column flex-md-row align-items-center justify-content-between mb-4 p-3 rounded-3 shadow-sm bg-white">
        <div class="d-flex align-items-center gap-2 mb-2 mb-md-0">
            <i class='bx bx-package fs-2 text-primary'></i>
            <h2 class="m-0 fw-bold text-primary">Danh Sách Sản Phẩm</h2>
        </div>
    </div>

    <div class="row g-3 mb-4 align-items-end">
        <div class="col-md-4">
            <div class="input-group">
                <input type="text" id="searchTerm" class="form-control" placeholder="Tìm kiếm sản phẩm..." value="@ViewBag.SearchTerm" aria-label="Search">
                <button class="btn btn-primary" type="button" onclick="applyFilter()"><i class='bx bx-search'></i></button>
            </div>
        </div>
        <div class="col-md-3">
            <label for="loaiSanPham" class="form-label mb-1">Lọc Theo Loại</label>
            <select id="loaiSanPham" class="form-select" onchange="applyFilter()">
                <option value="">Tất cả</option>
                @foreach (var loai in ViewBag.LoaiSanPham as List<string>)
                {
                    <option value="@loai" @(Request.QueryString["loaiSanPham"] == loai ? "selected" : "")>@loai</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <label for="thuongHieu" class="form-label mb-1">Lọc Theo Thương Hiệu</label>
            <select id="thuongHieu" class="form-select" onchange="applyFilter()">
                <option value="">Tất cả</option>
                @foreach (var thuong in ViewBag.ThuongHieu as List<string>)
                {
                    <option value="@thuong" @(Request.QueryString["thuongHieu"] == thuong ? "selected" : "")>@thuong</option>
                }
            </select>
        </div>
        <div class="col-md-2 text-end">
            <div class="d-flex flex-row gap-2 justify-content-end">
                <button type="button" class="btn btn-danger flex-fill" onclick="confirmDelete()">
                    <i class='bx bx-trash'></i> Xóa
                </button>
                <a href="@Url.Action("Create")" class="btn btn-success d-flex justify-content-center align-items-center gap-2 flex-fill">
                    <i class='bx bx-plus'></i> Thêm mới
                </a>
            </div>
        </div>
    </div>

    <form id="deleteForm" method="post" action="@Url.Action("XoaNhieuSP", "Ad_Product")">
        <div class="table-responsive">
            <table class="table table-bordered table-hover align-middle product-table shadow-sm rounded-3 overflow-hidden">
                <thead class="table-light">
                    <tr>
                        <th><input type="checkbox" id="selectAll" onclick="toggleAll(this)" /></th>
                        <th>Hình Ảnh</th>
                        <th>Tên sản phẩm</th>
                        <th>Loại</th>
                        <th>Mô tả</th>
                        <th>Thương hiệu</th>
                        <th>Hình ảnh phụ</th>
                        <th>Chức Năng</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" name="sanPhamIds" value="@item.san_pham_id" />
                            </td>
                            <td>
                                <img src="~/Content/Hinh_Anh/@item.hinh_anh_chinh" class="img-thumbnail main-img" alt="Ảnh chính" />
                            </td>
                            <td class="fw-semibold">@Html.DisplayFor(modelItem => item.ten_san_pham)</td>
                            <td>@Html.DisplayFor(modelItem => item.loai_san_pham)</td>
                            <td class="truncate">@item.mo_ta_chung</td>
                            <td>@Html.DisplayFor(modelItem => item.thuong_hieu)</td>
                            <td>
                                <div class="d-flex flex-wrap gap-1">
                                    @foreach (var image in item.danh_sach_hinh_anh.Split(','))
                                    {
                                        <img src="~/Content/Hinh_Anh/@image.Trim()" class="img-thumbnail sub-img" alt="Ảnh phụ" />
                                    }
                                </div>
                            </td>
                            <td>
                                <div class="d-flex gap-2 justify-content-center">
                                    <a href="@Url.Action("Edit", new { id = item.san_pham_id })" class="btn btn-sm btn-outline-primary" title="Sửa">
                                        <i class='bx bx-edit'></i>
                                    </a>
                                    <a href="@Url.Action("HienThiChiTietSanPham", new { san_pham_id = item.san_pham_id })" class="btn btn-sm btn-outline-info" title="Chi tiết">
                                        <i class='bx bx-info-circle'></i>
                                    </a>
                                    <a href="@Url.Action("Delete", new { id = item.san_pham_id })" class="btn btn-sm btn-outline-danger" title="Xóa">
                                        <i class='bx bx-trash'></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="d-flex justify-content-center mt-3">
            @Html.PagedListPager(Model, page => Url.Action("HienThiSP", new { page, loaiSanPham = Request["loaiSanPham"], thuongHieu = Request["thuongHieu"], searchTerm = Request["searchTerm"] }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded, MaximumPageNumbersToDisplay = 5 })
        </div>
    </form>
</div>

<script>
    function toggleAll(source) {
        let checkboxes = document.getElementsByName('sanPhamIds');
        checkboxes.forEach((checkbox) => checkbox.checked = source.checked);
    }

    function confirmDelete() {
        if (confirm("Bạn có chắc muốn xóa các sản phẩm đã chọn không?")) {
            document.getElementById('deleteForm').submit();
        }
    }

    function applyFilter() {
        const loaiSanPham = document.getElementById("loaiSanPham").value;
        const thuongHieu = document.getElementById("thuongHieu").value;
        const searchTerm = document.getElementById("searchTerm").value;
        const url = '@Url.Action("HienThiSP", "Ad_Product")';
        window.location.href = `${url}?loaiSanPham=${loaiSanPham}&thuongHieu=${thuongHieu}&searchTerm=${searchTerm}`;
    }
    document.querySelectorAll('.truncate').forEach(td => {
        const text = td.innerText;
        if (text.length > 50) {
            td.innerText = text.substring(0, 50) + '...';
        }
    });
</script>

<style>
    .product-admin-container {
        margin: 0 auto;
    }

    .admin-header {
        background: linear-gradient(90deg, #e3e9ff 0%, #f8fafd 100%);
    }

    .admin-header h2 {
        font-size: 2rem;
        font-weight: bold;
        color: #2D2E7F;
    }

    .product-table {
        border-radius: 12px;
        overflow: hidden;
        background: #fff;
    }

    .product-table th, .product-table td {
        vertical-align: middle;
        text-align: center;
    }

    .product-table thead th {
        background: #f1f3fa;
        color: #2D2E7F;
        font-weight: 600;
        border-bottom: 2px solid #e3e9ff;
    }

    .product-table tbody tr {
        transition: background 0.2s;
    }

    .product-table tbody tr:hover {
        background: #f5f7ff;
    }

    .main-img {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 8px;
        border: 2px solid #e3e9ff;
        background: #f8fafd;
    }

    .sub-img {
        width: 40px;
        height: 40px;
        object-fit: cover;
        border-radius: 6px;
        border: 1px solid #e3e9ff;
        background: #f8fafd;
    }

    .truncate {
        max-width: 180px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .btn-outline-primary, .btn-outline-info, .btn-outline-danger {
        border-radius: 50%;
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
        font-size: 1.2rem;
        transition: background 0.2s, color 0.2s;
    }

    .btn-outline-primary:hover {
        background: #2D2E7F;
        color: #fff;
    }

    .btn-outline-info:hover {
        background: #0dcaf0;
        color: #fff;
    }
    
    .btn-outline-danger:hover {
        background: #dc3545;
        color: #fff;
    }
    
    @@media (max-width: 768px) {
        .admin-header, .product-admin-container {
            padding: 10px;
        }
        .product-table th, .product-table td {
            font-size: 0.95rem;
            padding: 8px;
        }
        .main-img {
            width: 50px;
            height: 50px;
        }
        .sub-img {
            width: 28px;
            height: 28px;
        }
    }
</style>