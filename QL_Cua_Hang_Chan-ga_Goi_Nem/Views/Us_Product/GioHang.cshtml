@model List<QL_Cua_Hang_Chan_ga_Goi_Nem.Models.User_Md.CartItem>
@{
    ViewBag.Title = "GioHang";
    Layout = "~/Views/Shared/User_Layout.cshtml";
}

<div class="cart-container">
    <!-- Header -->
    <div class="cart-header">
        <a href="@Url.Action("HienThiSanPhamNem", "Us_Product")" class="back-btn">
            <i class='bx bx-chevron-left'></i>
            <span>Quay lại</span>
        </a>
        <h2 class="page-title mt-2">
            <i class='bx bx-shopping-bag'></i>
            Giỏ hàng của bạn
        </h2>
    </div>

    @if (Model.Any())
    {
        <!-- Cart Items -->
        <div class="cart-content">
            <div class="cart-items">
                @foreach (var item in Model)
                {
                    <div class="cart-item">
                        <div class="item-image">
                            <img src="@Url.Content("~/Content/Hinh_Anh/" + item.HinhAnh)" alt="@item.TenSanPham" />
                        </div>
                        
                        <div class="item-details">
                            <h3 class="item-name">@item.TenSanPham</h3>
                            <div class="item-specs">
                                <span class="spec-item">
                                    <i class='bx bx-fullscreen'></i>
                                    @item.KichThuoc
                                </span>
                                <span class="spec-item">
                                    <i class='bx bx-palette'></i>
                                    @item.MauSac
                                </span>
                                <span class="spec-item">
                                    <i class='bx bx-ruler'></i>
                                    @item.DoDay cm
                                </span>
                            </div>
                            <div class="item-price">
                                @item.Gia.ToString("N0") <span class="currency">đ</span>
                            </div>
                        </div>

                        <div class="item-actions">
                            <div class="quantity-section">
                                <label class="quantity-label">Số lượng</label>
                                <form class="quantity-form" method="post" action="@Url.Action("CapNhatGioHang", "Us_Product")">
                                    <input type="hidden" name="id" value="@item.SanPhamId" />
                                    <div class="quantity-controls">
                                        <button type="button" class="qty-btn qty-minus" onclick="decreaseQuantity(this)">
                                            <i class='bx bx-minus'></i>
                                        </button>
                                        <input type="number" name="soLuong" value="@item.SoLuong" min="1" class="quantity-input" readonly />
                                        <button type="button" class="qty-btn qty-plus" onclick="increaseQuantity(this)">
                                            <i class='bx bx-plus'></i>
                                        </button>
                                    </div>
                                    <button type="submit" class="update-btn">
                                        <i class='bx bx-check'></i>
                                        Cập nhật
                                    </button>
                                </form>
                            </div>
                            
                            <div class="item-total d-flex align-items-center">
                                <span class="total-label">Thành tiền:</span>
                                <span class="total-amount">@item.ThanhTien.ToString("N0") <span class="currency">đ</span></span>
                            </div>
                            
                            <a href="@Url.Action("XoaKhoiGio", "Us_Product", new { id = item.SanPhamId })" 
                               class="remove-btn" onclick="return confirm('Bạn có chắc muốn xóa sản phẩm này?')">
                                <i class='bx bx-trash'></i>
                                <span>Xóa</span>
                            </a>
                        </div>
                    </div>
                }
            </div>

            <!-- Order Summary -->
            <div class="order-summary">
                <div class="summary-card">
                    <h3 class="summary-title">
                        <i class='bx bx-receipt'></i>
                        Tóm tắt đơn hàng
                    </h3>
                    
                    <div class="summary-details">
                        <div class="summary-row">
                            <span>Số lượng sản phẩm:</span>
                            <span class="summary-value">@Model.Sum(i => i.SoLuong) sản phẩm</span>
                        </div>
                        <div class="summary-row">
                            <span>Tạm tính:</span>
                            <span class="summary-value">@Model.Sum(i => i.ThanhTien).ToString("N0") đ</span>
                        </div>
                        <div class="summary-row shipping">
                            <span>Phí vận chuyển:</span>
                            <span class="summary-value free">Miễn phí</span>
                        </div>
                        <div class="summary-divider"></div>
                        <div class="summary-row total">
                            <span>Tổng cộng:</span>
                            <span class="summary-value">@Model.Sum(i => i.ThanhTien).ToString("N0") đ</span>
                        </div>
                    </div>
                    
                    <a href="@Url.Action("ThanhToan", "Us_Product")" class="checkout-btn">
                        <i class='bx bx-credit-card'></i>
                        <span>Tiến hành thanh toán</span>
                        <i class='bx bx-chevron-right'></i>
                    </a>
                    
                    <div class="security-badge">
                        <i class='bx bx-shield-check'></i>
                        <span>Thanh toán an toàn & bảo mật</span>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Empty Cart -->
        <div class="empty-cart">
            <h3 class="empty-cart-title">Giỏ hàng trống</h3>
            <p class="empty-cart-message">Hãy thêm sản phẩm vào giỏ hàng để tiếp tục mua sắm</p>
            <a href="@Url.Action("HienThiSanPhamNem", "Us_Product")" class="continue-shopping-btn">
                <i class='bx bx-store'></i>
                Tiếp tục mua sắm
            </a>
        </div>
    }
</div>

<style>
    * {
        box-sizing: border-box;
    }

    .cart-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        min-height: 100vh;
    }

    .cart-header {
        margin-bottom: 30px;
    }

    .back-btn {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        color: #fff;
        text-decoration: none;
        font-size: 16px;
        font-weight: 500;
        margin-bottom: 15px;
        transition: all 0.3s ease;
        background: var(--primary-color);
        padding: 8px 16px;
        border-radius: 25px;
        backdrop-filter: blur(10px);
    }

    .page-title {
        color: #1f2937;
        font-size: 28px;
        font-weight: 700;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .cart-content {
        display: grid;
        grid-template-columns: 1fr 350px;
        gap: 30px;
    }

    .cart-items {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .cart-item {
        background: #fff;
        border-radius: 20px;
        padding: 25px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        display: grid;
        grid-template-columns: 120px 1fr 300px;
        gap: 20px;
        align-items: start;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .cart-item:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    .item-image {
        position: relative;
    }

    .item-image img {
        width: 100%;
        height: 100px;
        object-fit: cover;
        border-radius: 12px;
        background: #f8f9ff;
        border: 2px solid #e0e7ff;
    }

    .item-details {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .item-name {
        font-size: 18px;
        font-weight: 600;
        color: #1f2937;
        margin: 0;
        line-height: 1.4;
    }

    .item-specs {
        display: flex;
        flex-wrap: wrap;
        gap: 12px;
    }

    .spec-item {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        background: #f3f4f6;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 13px;
        color: #6b7280;
        font-weight: 500;
    }

    .spec-item i {
        font-size: 14px;
        color: #9ca3af;
    }

    .item-price {
        font-size: 20px;
        font-weight: 700;
        color: #dc2626;
    }

    .currency {
        font-size: 14px;
        font-weight: 500;
    }

    .item-actions {
        display: flex;
        flex-direction: column;
        gap: 22px;
        align-items: flex-end;
    }

    .quantity-section {
        display: flex;
        flex-direction: column;
        gap: 8px;
        align-items: center;
    }

    .quantity-label {
        font-size: 12px;
        color: #6b7280;
        font-weight: 500;
        margin: 0;
    }

    .quantity-form {
        display: flex;
        flex-direction: column;
        gap: 10px;
        align-items: center;
    }

    .quantity-controls {
        display: flex;
        align-items: center;
        background: #f9fafb;
        border-radius: 12px;
        padding: 4px;
        border: 1px solid #e5e7eb;
    }

    .qty-btn {
        width: 32px;
        height: 32px;
        border: none;
        background: #fff;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #6b7280;
        cursor: pointer;
        transition: all 0.2s ease;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    }

    .qty-btn:hover {
        background: #667eea;
        color: #fff;
        transform: scale(1.1);
    }

    .quantity-input {
        width: 50px;
        height: 32px;
        text-align: center;
        border: none;
        background: transparent;
        font-weight: 600;
        color: #1f2937;
        font-size: 14px;
    }

    .update-btn {
        background-color: var(--primary-color);
        color: #fff;
        border: none;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 6px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
    }

    .update-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(102, 126, 234, 0.4);
    }

    .total-label {
        display: block;
        font-size: 14px;
        color: #6b7280;
        font-weight: 500;
        margin-right: 10px;
    }

    .total-amount {
        font-size: 18px;
        font-weight: 700;
        color: #059669;
    }

    .remove-btn {
        display: flex;
        align-items: center;
        gap: 6px;
        color: #dc2626;
        text-decoration: none;
        font-size: 13px;
        font-weight: 500;
        padding: 8px 12px;
        border-radius: 20px;
        transition: all 0.3s ease;
        background: rgba(220, 38, 38, 0.1);
    }

    .remove-btn:hover {
        color: #fff;
        background: #dc2626;
        transform: scale(1.05);
    }

    .order-summary {
        position: sticky;
        top: 20px;
    }

    .summary-card {
        background: #fff;
        border-radius: 20px;
        padding: 25px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }

    .summary-title {
        font-size: 20px;
        font-weight: 700;
        color: #1f2937;
        margin: 0 0 20px 0;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .summary-details {
        margin-bottom: 25px;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 0;
        font-size: 14px;
    }

    .summary-row.shipping {
        color: #6b7280;
    }

    .summary-row.total {
        font-size: 18px;
        font-weight: 700;
        color: #1f2937;
        border-top: 2px solid #e5e7eb;
        padding-top: 15px;
        margin-top: 15px;
    }

    .summary-value {
        font-weight: 600;
    }

    .summary-value.free {
        color: #059669;
    }

    .checkout-btn {
        width: 100%;
        background: var(--primary-color);
        color: #fff;
        text-decoration: none;
        padding: 16px 20px;
        border-radius: 15px;
        font-weight: 600;
        font-size: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        transition: all 0.3s ease;
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        margin-bottom: 15px;
    }

    .checkout-btn:hover {
        color: #fff;
        transform: translateY(-3px);
        box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);
    }

    .security-badge {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        color: #6b7280;
        font-size: 13px;
        font-weight: 500;
    }

    .security-badge i {
        color: #059669;
    }

    .empty-cart {
        text-align: center;
        margin: 40px auto;
    }

    .empty-cart-title {
        font-size: 24px;
        font-weight: 700;
        color: #1f2937;
        margin: 0 0 10px 0;
    }

    .empty-cart-message {
        color: #6b7280;
        font-size: 16px;
        margin: 0 0 20px 0;
        line-height: 1.5;
    }

    .continue-shopping-btn {
        background: var(--primary-color);
        color: #fff;
        text-decoration: none;
        padding: 14px 24px;
        border-radius: 25px;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 10px;
        transition: all 0.3s ease;
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
    }

    .continue-shopping-btn:hover {
        color: #fff;
        transform: translateY(-3px);
        box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);
    }

    /* Responsive Design */
    @@media (max-width: 1024px) {
        .cart-content {
            grid-template-columns: 1fr;
        }
        
        .order-summary {
            position: static;
        }
    }

    @@media (max-width: 768px) {
        .cart-container {
            padding: 15px;
        }
        
        .cart-item {
            grid-template-columns: 1fr;
            gap: 15px;
            padding: 20px;
        }
        
        .item-actions {
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
        }
        
        .page-title {
            font-size: 24px;
        }
        
        .summary-card {
            padding: 20px;
        }
    }

    @@media (max-width: 480px) {
        .cart-container {
            padding: 10px;
        }
        
        .cart-item {
            padding: 15px;
        }
        
        .item-actions {
            flex-direction: column;
            align-items: stretch;
        }
        
        .quantity-section {
            align-items: stretch;
        }
        
        .summary-card {
            padding: 15px;
        }
    }
</style>

<script>
    function increaseQuantity(button) {
        const input = button.parentElement.querySelector('.quantity-input');
        const currentValue = parseInt(input.value);
        input.value = currentValue + 1;
    }

    function decreaseQuantity(button) {
        const input = button.parentElement.querySelector('.quantity-input');
        const currentValue = parseInt(input.value);
        if (currentValue > 1) {
            input.value = currentValue - 1;
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        const cartItems = document.querySelectorAll('.cart-item');
        cartItems.forEach((item, index) => {
            item.style.opacity = '0';
            item.style.transform = 'translateY(20px)';
            setTimeout(() => {
                item.style.transition = 'all 0.5s ease';
                item.style.opacity = '1';
                item.style.transform = 'translateY(0)';
            }, index * 100);
        });
    });
</script>